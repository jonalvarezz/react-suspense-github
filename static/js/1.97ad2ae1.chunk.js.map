{"version":3,"sources":["apis/api.js","types.js","components/RepositoryItem.js","components/RepositoryFilters.js","components/RepositoryList.js"],"names":["__webpack_require__","d","__webpack_exports__","fetchReposByOwner","fetchRepoBranches","apiPrefix","validateRateLimit","response","headers","get","epoch","parseInt","resetDate","Date","Error","concat","validateStatus","ok","toJson","json","owner","fetch","Content-Type","Accept","then","status","repo","RepositoryType","id","PropTypes","number","name","string","description","full_name","forks","watchers_count","stargazers_count","language","homepage","ContainerBase","styled","li","_templateObject","Stats","div","_templateObject2","fixNumber","toString","length","RepositoryItem","_ref","theme","props","Object","objectWithoutProperties","Container","_templateObject3","borderColorBase","linksTo","react_default","a","createElement","style","margin","Link","to","icon_default","type","Option","Select","LanguageOptions","map","l","key","value","SortersOptions","children","s","assign","Col","RepositoryFilters_templateObject","RepositoryFilters_templateObject2","RepositoryFilters","onSortChange","onLanguageChange","RepositoryFilters_Container","select_default","mode","width","minWidth","placeholder","onChange","defaultValue","repositoryTypeKeys","keys","getItemProps","allProps","reduce","acc","curr","List","ul","RepositoryList_templateObject","RepositoryList","match","params","useContext","ThemeContext","_useState","useState","_useState2","slicedToArray","list","setList","_useState3","_useState4","sortBy","setSort","_useState5","_useState6","filterLanguageBy","setLanguages","useEffect","data","Array","isArray","sortedData","useMemo","arr","sort","b","sortRepos","filteredData","filterBy","filter","indexOf","RepoBreadcrumb","components_RepositoryFilters","item","components_RepositoryItem","_ref2","breadcrumb_default","Item","defaultProps"],"mappings":"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","file":"static/js/1.97ad2ae1.chunk.js","sourcesContent":["const apiPrefix = 'https://api.github.com';\n\nconst validateRateLimit = response => {\n  if (response.headers.get('X-RateLimit-Remaining') === '0') {\n    const epoch = parseInt(response.headers.get('X-RateLimit-Reset'), 10);\n    const resetDate = new Date(epoch * 1000);\n    throw new Error(\n      `Doh... API rate limit has been reached. Please try again on: ${resetDate}`\n    );\n  }\n\n  return response;\n};\n\nconst validateStatus = response => {\n  if (response.ok) return response;\n\n  throw new Error(\n    'There was an error with your request. Please try again later'\n  );\n};\n\nconst toJson = response => response.json();\n\nexport function fetchReposByOwner(owner) {\n  const promise = fetch(`${apiPrefix}/orgs/${owner}/repos`, {\n    headers: {\n      'Content-Type': 'application/json',\n      Accept: 'application/vnd.github.v3+json'\n    }\n  })\n    .then(validateRateLimit)\n    .then(response => {\n      if (response.status === 404)\n        throw new Error(\n          'There was an error with your search param. Did you misspell it?'\n        );\n\n      return response;\n    })\n    .then(validateStatus)\n    .then(toJson);\n\n  return promise;\n}\n\nexport function fetchRepoBranches(owner, repo) {\n  const promise = fetch(`${apiPrefix}/repos/${owner}/${repo}/branches`, {\n    headers: {\n      'Content-Type': 'application/json',\n      Accept: 'application/vnd.github.v3+json'\n    }\n  })\n    .then(validateRateLimit)\n    .then(validateStatus)\n    .then(toJson);\n\n  return promise;\n}\n","import PropTypes from 'prop-types';\n\nexport const RepositoryType = {\n  id: PropTypes.number,\n  name: PropTypes.string,\n  description: PropTypes.string,\n  full_name: PropTypes.string,\n  forks: PropTypes.number,\n  watchers_count: PropTypes.number,\n  stargazers_count: PropTypes.number,\n  language: PropTypes.string,\n  homepage: PropTypes.string\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Icon from 'antd/lib/icon';\nimport { RepositoryType } from '../types';\n\nconst ContainerBase = styled.li`\n  padding: 20px;\n  margin-bottom: 1rem;\n  display: grid;\n  grid-template-columns: 45% auto;\n  align-items: center;\n`;\nconst Stats = styled.div`\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  font-size: 1rem;\n\n  i + span {\n    margin-left: 3px;\n  }\n`;\n\nconst propTypes = {\n  ...RepositoryType,\n  theme: PropTypes.object\n};\n\nconst fixNumber = number => {\n  const length = number.toString().length;\n  if (length < 4) return number;\n\n  const newNumberStr = `${parseInt(number / 1000, 10)}K`;\n\n  return newNumberStr;\n};\n\nfunction RepositoryItem({ theme, ...props }) {\n  const Container = styled(ContainerBase)`\n    border: 1px solid ${theme.borderColorBase};\n  `;\n  const linksTo = `/r/${props.full_name}`;\n\n  return (\n    <Container>\n      <div>\n        <h3 style={{ margin: '0' }}>\n          <Link to={linksTo}>{props.name}</Link>\n        </h3>\n        <p>{props.description}</p>\n      </div>\n      <Stats>\n        <div>\n          <Icon type=\"star\" />\n          <span>{fixNumber(props.stargazers_count)}</span>\n        </div>\n        <div>\n          <Icon type=\"copy\" />\n          <span>{fixNumber(props.forks)}</span>\n        </div>\n        <div>\n          <Icon type=\"eye\" />\n          <span>{fixNumber(props.watchers_count)}</span>\n        </div>\n      </Stats>\n    </Container>\n  );\n}\nRepositoryItem.propTypes = propTypes;\n\nexport default RepositoryItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Select from 'antd/lib/select';\nimport styled from 'styled-components';\n\nconst Option = Select.Option;\n\nconst languages = [\n  'JavaScript',\n  'PHP',\n  'Java',\n  'Python',\n  'HTML',\n  'Ruby',\n  'Objective-C',\n  'CSS',\n  'Swift',\n  'C#'\n];\nconst LanguageOptions = languages.map(l => (\n  <Option key={l} value={l}>\n    {l}\n  </Option>\n));\n\nconst sorters = [\n  { value: 'stargazers_count', children: 'Stars' },\n  { value: 'forks', children: 'Forks' }\n];\nconst SortersOptions = sorters.map(s => <Option {...s} key={s.value} />);\n\nconst Col = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst Container = styled.div`\n  display: grid;\n  grid-column-template: 1fr 1fr;\n  grid-gap: 15%;\n  margin: 3rem 0 1rem;\n  align-items: center;\n  justify-content: space-between;\n\n  span {\n    font-weight: bold;\n    white-space: nowrap;\n    padding-right: 8px;\n  }\n\n  @media (min-width: 500px) {\n    grid-template-columns: 1fr 1fr;\n  }\n`;\n\nconst propTypes = {\n  onSortChange: PropTypes.func,\n  onLanguageChange: PropTypes.func\n};\n\nfunction RepositoryFilters({ onSortChange, onLanguageChange }) {\n  return (\n    <Container>\n      <Col>\n        <span>Languages: </span>\n        <Select\n          mode=\"multiple\"\n          style={{ width: '100%', minWidth: '180px' }}\n          placeholder=\"Please select\"\n          onChange={onLanguageChange}\n        >\n          {LanguageOptions}\n        </Select>\n      </Col>\n      <Col>\n        <span>Sort by: </span>\n        <Select\n          style={{ width: '100%' }}\n          defaultValue=\"stargazers_count\"\n          onChange={onSortChange}\n        >\n          {SortersOptions}\n        </Select>\n      </Col>\n    </Container>\n  );\n}\nRepositoryFilters.propTypes = propTypes;\n\nexport default RepositoryFilters;\n","import React, { useContext, useEffect, useState, useMemo } from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport Breadcrumb from 'antd/lib/breadcrumb';\n\nimport { fetchReposByOwner } from '../apis/api';\nimport ThemeContext from '../theme/ThemeContext';\nimport { RepositoryType } from '../types';\nimport Repository from './RepositoryItem';\nimport Filters from './RepositoryFilters';\n\nconst repositoryTypeKeys = Object.keys(RepositoryType);\n\nconst getItemProps = allProps =>\n  repositoryTypeKeys.reduce((acc, curr) => {\n    acc[curr] = allProps[curr];\n    return acc;\n  }, {});\n\nconst List = styled.ul`\n  margin: 0;\n  list-style: none;\n  padding: 0;\n`;\n\nconst propTypes = {\n  // Router\n  match: PropTypes.object\n};\n\nfunction RepositoryList({ match }) {\n  const owner = match.params.owner;\n  const theme = useContext(ThemeContext);\n  const [list, setList] = useState([]);\n  const [sortBy, setSort] = useState('stargazers_count');\n  const [filterLanguageBy, setLanguages] = useState(['JavaScript']);\n\n  useEffect(() => {\n    fetchReposByOwner(owner).then(data => {\n      if (Array.isArray(data)) setList(data);\n    });\n  }, []);\n\n  const sortedData = useMemo(() => sortRepos(list, sortBy), [list, sortBy]);\n  const filteredData = useMemo(\n    () => filterRepos(sortedData, filterLanguageBy),\n    [sortedData, filterLanguageBy]\n  );\n\n  return (\n    <List>\n      <h1>Repositories</h1>\n      <RepoBreadcrumb owner={owner} />\n      <Filters onSortChange={setSort} onLanguageChange={setLanguages} />\n      {filteredData.map(item => (\n        <Repository key={item.id} {...getItemProps(item)} theme={theme} />\n      ))}\n    </List>\n  );\n}\nRepositoryList.propTypes = propTypes;\nRepositoryList.defaultProps = {\n  list: []\n};\n\nfunction sortRepos(arr, sortBy) {\n  return arr.sort((a, b) => b[sortBy] - a[sortBy]);\n}\n\nfunction filterRepos(arr, filterBy) {\n  return arr.filter(repo => {\n    if (filterBy.length === 0) return true;\n    return filterBy.indexOf(repo.language) > -1;\n  });\n}\n\nfunction RepoBreadcrumb({ owner }) {\n  return (\n    <Breadcrumb>\n      <Breadcrumb.Item>\n        <Link to=\"/\">Home</Link>\n      </Breadcrumb.Item>\n      <Breadcrumb.Item>{owner}</Breadcrumb.Item>\n    </Breadcrumb>\n  );\n}\n\nexport default RepositoryList;\n"],"sourceRoot":""}