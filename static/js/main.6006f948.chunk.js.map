{"version":3,"sources":["components/SearchInput.js","components/ErrorBoundary.js","components/Footer.js","components/Page404.js","components/App.js","serviceWorker.js","index.js","theme/ThemeContext.js"],"names":["Form","styled","form","_templateObject","SearchInput","_ref","onSearch","_useState","useState","_useState2","Object","slicedToArray","value","setValue","react_default","a","createElement","onSubmit","event","preventDefault","target","concat","input_default","size","onChange","_ref2","placeholder","prefix","icon_default","type","style","color","className","ErrorBoundary","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hasError","error","setState","_this$state","alert_default","message","banner","closable","children","React","Component","Container","footer","Footer_templateObject","Footer","href","rel","Page404","role","aria-label","Link","to","Repositories","lazy","Promise","all","__webpack_require__","e","then","bind","DetailPage","H1","h1","App_templateObject","main","_templateObject2","App","BrowserRouter","components_ErrorBoundary","Fragment","Route","render","history","components_SearchInput","push","App_Container","react","maxDuration","fallback","Switch","exact","path","component","components_Footer","Boolean","window","location","hostname","match","ReactDOM","ThemeContext","Provider","defaultTheme","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","d","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","primaryColor","linkColor","successColor","warningColor","errorColor","fontSizeBase","headingColor","textColor","textColorSecondary","disabledColor","borderRadiusBase","borderColorBase","boxShadowBase","Context","createContext"],"mappings":"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","file":"static/js/main.6006f948.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport Input from 'antd/lib/input';\nimport Icon from 'antd/lib/icon';\n\nconst Form = styled.form`\n  width: 95%;\n  margin: 0 auto;\n  max-width: 500px;\n  .SearchInput {\n    height: 50px;\n    border-radius: 4px;\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);\n  }\n`;\n\nconst propTypes = {\n  onSearch: PropTypes.func\n};\n\nfunction SearchInput({ onSearch }) {\n  const [value, setValue] = useState('');\n\n  const onChange = ({ target }) => setValue(target.value);\n\n  const onSubmit = event => {\n    event.preventDefault();\n    const target = value ? `/r/${value}` : '/';\n\n    onSearch(target);\n  };\n\n  return (\n    <Form onSubmit={onSubmit}>\n      <Input\n        size=\"large\"\n        value={value}\n        onChange={onChange}\n        placeholder=\"Company GitHub respository\"\n        prefix={<Icon type=\"github\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n        className=\"SearchInput\"\n      />\n    </Form>\n  );\n}\nSearchInput.propTypes = propTypes;\n\nexport default SearchInput;\n","import React from 'react';\nimport Alert from 'antd/lib/alert';\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false, error: null };\n  }\n\n  componentDidCatch(error) {\n    this.setState({\n      error: error || 'Something went wrong :(',\n      hasError: true\n    });\n  }\n\n  render() {\n    const { hasError, error } = this.state;\n    return (\n      <div>\n        {hasError && <Alert message={error} banner closable />}\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nexport default ErrorBoundary;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.footer`\n  position: fixed;\n  bottom: 0;\n  width: 100%\n  background: linear-gradient(to top, white 60%, transparent);\n  padding: 60px 0 10px;\n  text-align: center\n  font-weight: bold;\n  a {\n    color: currentColor;\n    padding: 0 10px;\n    font-size: .8rem;\n  }\n`;\n\nfunction Footer() {\n  return (\n    <Container>\n      <a\n        href=\"http://twitter.com/jonalvarezz\"\n        rel=\"noopener noreferrer\"\n        target=\"_blank\"\n      >\n        @jonalvarezz\n      </a>\n      <a\n        href=\"https://github.com/jonalvarezz/react-suspense-github\"\n        rel=\"noopener noreferrer\"\n        target=\"_blank\"\n      >\n        See source\n      </a>\n    </Container>\n  );\n}\n\nexport default Footer;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Page404() {\n  return (\n    <div>\n      <h1>\n        <span role=\"img\" aria-label=\"Dizzy face\">\n          ðŸ˜µ\n        </span>{' '}\n        Ups, this page does not exist...\n      </h1>\n      <p>\n        Was it on purpose? Oh you curious web surfer. Here,{' '}\n        <a\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href=\"https://www.youtube.com/watch?v=dQw4w9WgXcQ\"\n        >\n          take your price.\n        </a>\n      </p>\n      <Link to=\"/\">Go home.</Link>\n    </div>\n  );\n}\n\nexport default Page404;\n","import React, { Suspense, lazy } from 'react';\nimport styled from 'styled-components';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Search from '../components/SearchInput';\nimport ErrorBoundary from './ErrorBoundary';\nimport Footer from './Footer';\nimport Page404 from './Page404';\n\nconst Repositories = lazy(() => import('../components/RepositoryList'));\nconst DetailPage = lazy(() => import('../components/RepositoryDetail'));\n\nconst H1 = styled.h1`\n  margin-top: 3rem;\n  text-align: center;\n`;\n\nconst Container = styled.main`\n  width: 95%;\n  max-width: 600px;\n  margin: 2rem auto 6rem;\n`;\n\nfunction App() {\n  return (\n    <Router>\n      <ErrorBoundary>\n        <React.Fragment>\n          <Route\n            render={({ history }) => (\n              <div>\n                <H1>GitHub Explorer</H1>\n                <Search onSearch={history.push} />\n              </div>\n            )}\n          />\n          <Container>\n            <Suspense maxDuration={1000} fallback={<div>Loading...</div>}>\n              <Switch>\n                <Route exact path=\"/\" />\n                <Route exact path=\"/r/:owner\" component={Repositories} />\n                <Route path=\"/r/:owner/:repo\" component={DetailPage} />\n                <Route component={Page404} />\n              </Switch>\n            </Suspense>\n          </Container>\n          <Footer />\n        </React.Fragment>\n      </ErrorBoundary>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport Theme, { defaultTheme } from './theme/ThemeContext';\nimport * as serviceWorker from './serviceWorker';\nimport 'isomorphic-unfetch';\nimport 'antd/dist/antd.css';\n\nfunction Index() {\n  return (\n    <Theme.Provider value={defaultTheme}>\n      <App />\n    </Theme.Provider>\n  );\n}\n\nReactDOM.render(<Index />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createContext } from 'react';\n\n// Same as AntD\n// https://ant.design/docs/react/customize-theme\nexport const defaultTheme = {\n  primaryColor: '#1890ff', // primary color for all components\n  linkColor: '#1890ff', // link color\n  successColor: '#52c41a', // success state color\n  warningColor: '#faad14', // warning state color\n  errorColor: '#f5222d', // error state color\n  fontSizeBase: '14px', // major text font size\n  headingColor: 'rgba(0, 0, 0, .85)', // heading text color\n  textColor: 'rgba(0, 0, 0, .65)', // major text color\n  textColorSecondary: 'rgba(0, 0, 0, .45)', // secondary text color\n  disabledColor: 'rgba(0, 0, 0, .25)', // disable state color\n  borderRadiusBase: '4px', // major border radius\n  borderColorBase: '#d9d9d9', // major border color\n  boxShadowBase: '0 2px 8px rgba(0, 0, 0, .15)' // major shadow for layers\n};\n\nconst Context = createContext(defaultTheme);\n\nexport default Context;\n"],"sourceRoot":""}